// <auto-generated />
using System;
using CanvasHelperServerApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CanvasHelperServerApp.Migrations
{
    [DbContext(typeof(CanvasDbContext))]
    partial class CanvasDb_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.15");

            modelBuilder.Entity("CanvasHelperServerApp.Models.Assignment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdAssignmentType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idAssignmentType");

                    b.Property<int?>("IdCourse")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idCourse");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("IdAssignmentType");

                    b.HasIndex("IdCourse");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.AssignmentsType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("AssignmentsTypes");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Criterion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("IdAssignment")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idAssignment");

                    b.Property<int?>("MaxMark")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("IdAssignment");

                    b.ToTable("Criteria");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.FavoriteFeedback", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Mark")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("FavoriteFeedbacks");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Feedback", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdUser")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idUser");

                    b.Property<int?>("Mark")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("IdUser");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Permission", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.RolesPermissionsAssignment", b =>
                {
                    b.Property<int?>("IdAssignment")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idAssignment");

                    b.Property<int?>("IdPermission")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idPermission");

                    b.Property<int?>("IdRole")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idRole");

                    b.HasIndex("IdAssignment");

                    b.HasIndex("IdPermission");

                    b.HasIndex("IdRole");

                    b.ToTable("RolesPermissionsAssignments");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<int?>("IdRole")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idRole");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.UsersCriteriaFeedback", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdCriteria")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idCriteria");

                    b.Property<int?>("IdFeedback")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idFeedback");

                    b.Property<int?>("IdUser")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idUser");

                    b.HasKey("ID");

                    b.HasIndex("IdCriteria");

                    b.HasIndex("IdFeedback");

                    b.HasIndex("IdUser");

                    b.ToTable("UsersCriteriaFeedbacks");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.UsersFavoriteFeedback", b =>
                {
                    b.Property<int?>("IdFavoriteFeedback")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idFavoriteFeedback");

                    b.Property<int?>("IdUser")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idUser");

                    b.HasIndex("IdFavoriteFeedback");

                    b.HasIndex("IdUser");

                    b.ToTable("UsersFavoriteFeedbacks");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.UsersRole", b =>
                {
                    b.Property<int?>("IdRole")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idRole");

                    b.Property<int?>("IdUser")
                        .HasColumnType("INTEGER")
                        .HasColumnName("idUser");

                    b.HasIndex("IdRole");

                    b.HasIndex("IdUser");

                    b.ToTable("UsersRoles");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Assignment", b =>
                {
                    b.HasOne("CanvasHelperServerApp.Models.AssignmentsType", "IdAssignmentTypeNavigation")
                        .WithMany("Assignments")
                        .HasForeignKey("IdAssignmentType");

                    b.HasOne("CanvasHelperServerApp.Models.Course", "IdCourseNavigation")
                        .WithMany("Assignments")
                        .HasForeignKey("IdCourse");

                    b.Navigation("IdAssignmentTypeNavigation");

                    b.Navigation("IdCourseNavigation");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Criterion", b =>
                {
                    b.HasOne("CanvasHelperServerApp.Models.Assignment", "IdAssignmentNavigation")
                        .WithMany("Criteria")
                        .HasForeignKey("IdAssignment");

                    b.Navigation("IdAssignmentNavigation");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Feedback", b =>
                {
                    b.HasOne("CanvasHelperServerApp.Models.User", "IdUserNavigation")
                        .WithMany("Feedbacks")
                        .HasForeignKey("IdUser");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.RolesPermissionsAssignment", b =>
                {
                    b.HasOne("CanvasHelperServerApp.Models.Assignment", "IdAssignmentNavigation")
                        .WithMany()
                        .HasForeignKey("IdAssignment");

                    b.HasOne("CanvasHelperServerApp.Models.Permission", "IdPermissionNavigation")
                        .WithMany()
                        .HasForeignKey("IdPermission");

                    b.HasOne("CanvasHelperServerApp.Models.Role", "IdRoleNavigation")
                        .WithMany()
                        .HasForeignKey("IdRole");

                    b.Navigation("IdAssignmentNavigation");

                    b.Navigation("IdPermissionNavigation");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.UsersCriteriaFeedback", b =>
                {
                    b.HasOne("CanvasHelperServerApp.Models.Criterion", "IdCriteriaNavigation")
                        .WithMany("UsersCriteriaFeedbacks")
                        .HasForeignKey("IdCriteria");

                    b.HasOne("CanvasHelperServerApp.Models.Feedback", "IdFeedbackNavigation")
                        .WithMany()
                        .HasForeignKey("IdFeedback");

                    b.HasOne("CanvasHelperServerApp.Models.User", "IdUserNavigation")
                        .WithMany()
                        .HasForeignKey("IdUser");

                    b.Navigation("IdCriteriaNavigation");

                    b.Navigation("IdFeedbackNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.UsersFavoriteFeedback", b =>
                {
                    b.HasOne("CanvasHelperServerApp.Models.FavoriteFeedback", "IdFavoriteFeedbackNavigation")
                        .WithMany()
                        .HasForeignKey("IdFavoriteFeedback");

                    b.HasOne("CanvasHelperServerApp.Models.User", "IdUserNavigation")
                        .WithMany()
                        .HasForeignKey("IdUser");

                    b.Navigation("IdFavoriteFeedbackNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.UsersRole", b =>
                {
                    b.HasOne("CanvasHelperServerApp.Models.Role", "IdRoleNavigation")
                        .WithMany()
                        .HasForeignKey("IdRole");

                    b.HasOne("CanvasHelperServerApp.Models.User", "IdUserNavigation")
                        .WithMany()
                        .HasForeignKey("IdUser");

                    b.Navigation("IdRoleNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Assignment", b =>
                {
                    b.Navigation("Criteria");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.AssignmentsType", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Course", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.Criterion", b =>
                {
                    b.Navigation("UsersCriteriaFeedbacks");
                });

            modelBuilder.Entity("CanvasHelperServerApp.Models.User", b =>
                {
                    b.Navigation("Feedbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
